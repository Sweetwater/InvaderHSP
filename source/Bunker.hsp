#ifndef ___Bunker___
#define ___Bunker___

#include "./source/Define.hsp"

#module ModBunker	mX, mY,		\
					mShield,	\
					mIsActive,	\
					mImageID

#modinit int _imageID
	mImageID = _imageID
	mShield = bunkerMaxShield
	mIsActive = false
	return

#modterm
	return

#modfunc bunkerUpdate
	if mIsActive == false : return

	return

#modfunc bunkerDraw
	if mIsActive == false : return

	chip = double(bunkerAnimNum-1) * (double(mShield) / bunkerMaxShield)
	chip = (bunkerAnimNum-1) - chip

	pos mX, mY
	color transparence
	celput mImageID, chip
	return




#modcfunc bunkerGetX
	return mX

#modcfunc bunkerGetY
	return mY

#modcfunc bunkerIsDisable
	return mIsActive == false

#modcfunc bunkerIsActive
	return mIsActive


#modfunc bunkerDamage int _damage
	mShield -= _damage
logmes "bunkerDamage " + _damage
	if mShield <= 0 : mIsActive = false
	return

#modfunc bunkerDisable
	mIsActive = false
	return

#modfunc bunkerReset int x, int y
	mX = x
	mY = y
	mShield = bunkerMaxShield
	mIsActive = true
	return

#global


#endif
