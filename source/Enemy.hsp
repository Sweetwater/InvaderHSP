#ifndef ___Enemy___
#define ___Enemy___


#include "./source/Define.hsp"

#module ModEnemy mX, mY, mDirection, mSpeed, mIsActive, mImageID

#const moveY 4

#const xLimitMin 0
#const xLimitMax screenWidth

#modinit int imageID
	mImageID = imageID
	mIsActive = false
	return

#modterm
	return

#modfunc enemyUpdate array bullets
	if mIsActive == false : return

	if mDirection == dirLeft {
		mX -= mSpeed
	}
	if mDirection == dirRight {
		mX += mSpeed
	}
	mX = limit(mX, xLimitMin, xLimitMax)

	if (mX == xLimitMin) | (mX == xLimitMax) {
		if mDirection : mDirection = 0 : else : mDirection = 1
		mSpeed = rnd(5) + 1
	}

	if rnd(10) == 0 {
		repeat length(bullets)
			if bulletIsActive(bullets(cnt)) == false {
//				bulletFire bullets(cnt), mX, mY, dirDown
				break
			}
		loop
	}

	return

#modfunc enemyDraw
	if mIsActive == false : return
	pos mX, mY
	celput mImageID, 0
	return


#modcfunc enemyGetX
	return mX

#modcfunc enemyGetY
	return mY

#modcfunc enemyIsActiv
	return mIsActive

#modcfunc enemyIsActive
	return mIsActive

#modfunc enemyReset int x, int y
	mX = x
	mY = y
	mIsActive = true

	dim _dir, 2
	_dir(0) = dirLeft
	_dir(1) = dirRight

	mDirection = _dir(rnd(2))
	mSpeed = rnd(5) + 1

	return

#modfunc enemyDisable
	mIsActive = false
	return

#global


#endif
